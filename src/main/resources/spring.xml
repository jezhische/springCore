<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

    <bean id="app" class="App">
        <constructor-arg ref="client"/>
        <constructor-arg ref="cacheFileEventLogger"/>
    </bean>

    <bean id="client" class="beans.Client">
        <constructor-arg value="1"/>
        <constructor-arg value="John Smith"/>
    </bean>

    <bean id="eventLogger" class="loggers.ConsoleEventLogger"/>

    <bean id="fileEventLogger" class="loggers.FileEventLogger" init-method="init">
        <constructor-arg value="src\main\resources\loggfiles\log1.txt"/>
    </bean>

    <bean id="cacheFileEventLogger" class="loggers.CacheFileEventLogger" destroy-method="destroy">
        <constructor-arg value="src\main\resources\loggfiles\log2cache.txt"/>
        <constructor-arg value="3"/>
    </bean>

<!-- Prototype - new object on every bean call: -->
    <bean id="event" class="events.Event" scope="prototype">
        <!-- внутренний бин - виден только там, где он определен, поэтому не имеет имени или id - достучаться до него
         невозможно. Будет создаваться при создании event: -->
        <constructor-arg>
            <bean class="java.util.Date"/>
        </constructor-arg>
        <!--<constructor-arg ref="date"/>-->
        <!--<constructor-arg ref="df"/>-->
    </bean>

<!-- поскольку DateFormat - абстрактный класс, для создания его образца нужно воспользоваться статическим методом.
 Это возможно в spring с помощью использования factory-method: -->
    <!--<bean id="dateFormat" class="java.text.DateFormat" factory-method="getDateTimeInetance"/>-->

</beans>
