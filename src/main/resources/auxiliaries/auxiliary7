PROPERTY INJECTION
    Через property устанавливаются привязки (например, id и name для client м.установить через конструктор, а привязки
    типа greeting - через property; но м. использовать что-то одно):
    <bean id="client" class="clients.Client">
        <constructor-arg value="1"/>
        <constructor-arg value="John Smith"/>
        <property name="greetings" value="Hello there!"/> --здесь только name, а не id
    </bean>
    Чтобы это работало, необходимо наличие сеттера (геттер необязателен).
Таким же образом м. проинжектить бин или внутренний бин:
    <property name="..." ref=:..."/>

    <property name="...">
        <bean class="..."> -- inner bean
    </property>
Вот в таком случае:
     <bean id="client" class="clients.Client">
            <constructor-arg value="1"/>
            <constructor-arg value="John Smith"/>
            <property name="fullName" value="Jeremy Boldwin"/>
        </bean>
получим не John Smith, а Jeremy Boldwin

CONSTRUCTOR INJECTION OF LIST OR ARRAY:
создаем коллекцию: определяя value или ссылку на существующий бин, или создавая внутренний бин
- тем самым ЗАНОСИМ ЭТО ЗНАЧЕНИЕ В СПИСОК:
    <bean name="combinedEventLogger" class="loggers.CombinedEventLogger">
        <constructor-arg>
            <list>
                <value>...</value> -- simple values
                <ref bean="..."/> -- other beans
                <bean class="..."/> -- inner-beans
            </list>
        </constructor-arg>
    </bean>
SET
    <set>
    ....
    <set>
MAP - разные варианты:
            <map>
                <entry key="..." value="..."/> -- передача простых значений
                <entry key="..." value-ref="..."/>
                <entry key-ref="..." value-ref="..."/> -- референсы на какие-то бины
                <entry key="...">
                    <bean class="..."/> -- inner-bean
                </entry>
            </map>

ENUM - переменные перечисления пишутся без указания полного имени класса, спринг это понимает (напр., <entry key="INFO"..../>)

INJECTING PROPERTIES
java.util.properties (в принципе, та же map, где ключи и значения - это String)
<props>
    <prop key="...">...</prop>
    <prop key="...">...</prop>
</props>

NULL
(если какую-то property нужно установить в null):
<property name="soneNullProperty">
    <null/>
</property>






